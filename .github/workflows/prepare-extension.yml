# Build Chrome extension
name: build-ci

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for specific branches
  pull_request:
    branches: [ "main", "dev" ]
  # Triggers the workflow on push or pull request events but only for specific branches
  push:
    branches: [ "main", "dev" ]

  # For a workflow to be reusable by other repositories
  workflow_call:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
  actions: read
  pull-requests: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build Init
  init:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      current_branch: ${{ steps.base_branch_name.outputs.current_branch }}
      base_ref_branch: ${{ steps.base_branch_name.outputs.base_ref_branch }}
    #   base_sha: ${{ steps.last_successful_commit_pull_request.outputs.base }}

    steps:
      - name: Get base branch name
        id: base_branch_name
        uses: tj-actions/branch-names@v8.0.1

    #   - name: Nx Set SHAs
    #     uses: nrwl/nx-set-shas@v4.1.1
    #     id: last_successful_commit_pull_request
    #     with:
    #       main-branch-name: ${{ steps.base_branch_name.outputs.base_ref_branch }} # Get the last successful commit on the base branch.
    #       workflow-id: 'prepare-extension.yml'
    #       error-on-no-successful-workflow: true

  # Build artifact
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [init]
    if: contains('main, dev', github.base_ref)
    env:
      GIT_BRANCH_NAME: ${{ needs.init.outputs.current_branch }}
      GIT_BASE_BRANCH_NAME: ${{ needs.init.outputs.base_ref_branch }}
    #   GIT_BASE_SHA: ${{ needs.init.outputs.base_sha }}
      ZIP_NAME: aws-reinvent-ical-chrome-extension.zip
      EXTN_VERSION: ${{ github.run_number }}.${{ github.run_attempt }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git Checkout
        uses: actions/checkout@v4.2.0

    #   - name: Get changed CloudFormation files  with the commit of the last successful workflow run
    #     id: changed-files
    #     uses: tj-actions/changed-files@v45.0.2
    #     with:
    #       base_sha: ${{ env.GIT_BASE_SHA }}
    #       files_ignore: |
    #         .github/**
    #         docs/**
    #         lambda/**
    #         .git*
    #         LICENSE
    #       use_rest_api: true

    #   - name: List all changed CloudFormation files
    #     env:
    #       ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
    #     run: |
    #       for file in ${ALL_CHANGED_FILES}; do
    #         echo "$file was changed"
    #       done

      - name: Update manifest.json locally
        # if: steps.changed-lambda-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
        uses: maxgfr/github-change-json@v0.0.26
        with:
          key: 'version'
          value: 0.${{ env.EXTN_VERSION }}
          path: manifest.json

      - name: Package Chrome extension
        # if: steps.changed-lambda-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          zip -r ${{ env.ZIP_NAME }} . -x .git\*/\* -x .DS_Store -x .gitignore -x LICENSE -x README.md

      - name: Upload Lambda Package Zip
        # if: steps.changed-lambda-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4.4.0
        with:
          name: ${{ env.ZIP_NAME }}
          path: ${{ env.ZIP_NAME }}
          retention-days: 30